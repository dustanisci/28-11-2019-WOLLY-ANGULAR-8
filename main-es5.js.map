{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/shared/api/api.service.ts","webpack:///src/app/shared/components/alert/alert.component.ts","webpack:///src/app/shared/components/alert/alert.component.html","webpack:///src/app/shared/components/banner/banner.component.ts","webpack:///src/app/shared/components/banner/banner.component.html","webpack:///src/app/shared/components/card/card.component.ts","webpack:///src/app/shared/components/card/card.component.html","webpack:///src/app/shared/components/label-description/label-description.component.ts","webpack:///src/app/shared/components/label-description/label-description.component.html","webpack:///src/app/shared/components/navbar/navbar.component.ts","webpack:///src/app/shared/components/navbar/navbar.component.html","webpack:///src/app/shared/interface/contact.ts","webpack:///src/app/shared/mocky/mocky.ts","webpack:///src/app/shared/pipe/phone/phone.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","fb","appService","navbar","cards","contacts","phone","contact","contactForm","group","name","required","mail","email","maxLength","minLength","nullValidator","msg","setTimeout","alertType","get","value","send","subscribe","result","hideMsg","reset","sendContact","setValue","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","AppService","apiservice","post","providedIn","ApiService","http","headers","append","request","Object","map","key","url","setHeaders","params","put","delete","AlertComponent","BannerComponent","CardComponent","LabelDescriptionComponent","NavbarComponent","menuMobile","Contact","label","title","description","img","link","PhonePipe","replace","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { Navbar } from '@shared/interface/navbar';\r\nimport { navbar, cards, contact } from '@shared/mocky/mocky';\r\nimport { Card } from '@shared/interface/card';\r\nimport { LabelDescription } from '@shared/interface/label-description';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { PhonePipe } from '@shared/pipe/phone/phone.pipe';\r\nimport { AlertType } from '@shared/enum/alert';\r\nimport { AppService } from './app.service';\r\nimport { Contact } from '@shared/interface/contact';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent {\r\n  public navbar: Navbar[] = navbar;\r\n  public cards: Card[] = cards;\r\n  public contacts: LabelDescription[] = contact;\r\n  public phone = new PhonePipe();\r\n  public alertType: AlertType;\r\n  public contact: Contact = new Contact();\r\n\r\n  public contactForm: FormGroup = this.fb.group({\r\n    name: ['', [Validators.required]],\r\n    mail: ['', [Validators.email, Validators.required]],\r\n    phone: ['', [Validators.maxLength(15), Validators.minLength(14), Validators.nullValidator]],\r\n    msg: ['', [Validators.required]]\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private appService: AppService) { }\r\n\r\n  public hideMsg(): void {\r\n    setTimeout(() => {\r\n      this.alertType = null;\r\n    }, 1500);\r\n  }\r\n\r\n  public sendContact() {\r\n    this.contact.name = this.contactForm.get('name').value;\r\n    this.contact.mail = this.contactForm.get('mail').value;\r\n    this.contact.msg = this.contactForm.get('msg').value;\r\n    this.contact.phone = this.contactForm.get('phone').value;\r\n\r\n    this.appService.send(this.contact).subscribe(\r\n      (result) => {\r\n        this.alertType = 1;\r\n        this.hideMsg();\r\n        this.contactForm.reset();\r\n      },\r\n      () => {\r\n        this.alertType = 2;\r\n        this.hideMsg();\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <app-banner [navbar]=\"navbar\" [url]=\"'./assets/img/banner.jpg'\"\r\n    [description]=\"'Nós somos especialistas no que fazemos pois somos conectados com o mundo, conectados com o seu mundo.'\">\r\n  </app-banner>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"retreat\">\r\n      <app-card *ngFor=\"let card of cards\" [title]=\"card.title\" [description]=\"card.description\" [img]=\"card.img\"\r\n        [link]=\"card.link\">\r\n      </app-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"retreat\">\r\n      <div class=\"grid\">\r\n        <app-label-description *ngFor=\"let contact of contacts\" [label]=\"contact.label\"\r\n          [description]=\"contact.description\">\r\n        </app-label-description>\r\n      </div>\r\n      <form class=\"grid\" ngNativeValidate [formGroup]=\"contactForm\" (ngSubmit)=\"sendContact()\">\r\n        <div class=\"retreat-padding\">\r\n          <input formControlName=\"name\" type=\"text\" placeholder=\"Seu Nome\">\r\n          <input formControlName=\"mail\" type=\"email\" placeholder=\"Seu E-mail\">\r\n          <input formControlName=\"phone\" maxlength=\"15\" type=\"text\" placeholder=\"Seu Telefone\"\r\n            (keyup)=\"contactForm.get('phone').setValue(phone.transform(contactForm.get('phone').value))\">\r\n          <textarea formControlName=\"msg\" placeholder=\"Sua Mensagem\"></textarea>\r\n        </div>\r\n        <div class=\"container-btn\">\r\n          <button type=\"submit\" [disabled]=\"contactForm.invalid\"\r\n            [ngClass]=\"{ disabled: contactForm.invalid }\">Enviar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-alert [ngStyle]=\"{opacity: alertType ? '1' : '0'}\"\r\n  [msg]=\"alertType === 1 ? 'Sua mensagem foi enviada com sucesso!!' : 'Falha na sua mensagem, tente novamente!!'\"\r\n  [type]=\"alertType\"></app-alert>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BannerComponent } from '@shared/components/banner/banner.component';\r\nimport { CardComponent } from '@shared/components/card/card.component';\r\nimport { NavbarComponent } from '@shared/components/navbar/navbar.component';\r\nimport { LabelDescriptionComponent } from '@shared/components/label-description/label-description.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PhonePipe } from '@shared/pipe/phone/phone.pipe';\r\nimport { AlertComponent } from '@shared/components/alert/alert.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppService } from './app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BannerComponent,\r\n    CardComponent,\r\n    NavbarComponent,\r\n    LabelDescriptionComponent,\r\n    PhonePipe,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AppService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Contact } from '@shared/interface/contact';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiService } from '@shared/api/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(private apiservice: ApiService) { }\r\n\r\n  public send(contact: Contact): Observable<Contact> {\r\n    return this.apiservice.post(`${environment.contact}`, contact);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private headers: HttpHeaders = new HttpHeaders().append('Content-Type', 'application/json');\r\n  private request: HttpParams = new HttpParams();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private setHeaders(request?): void {\r\n    if (request) {\r\n      this.request = {} as HttpParams;\r\n      Object.keys(request).map(key => {\r\n        this.request.append(key, request[key]);\r\n      });\r\n    }\r\n  }\r\n\r\n  public get(url: string, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.get<any>(url, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public post(url: string, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.post<any>(url, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public put(url: string, id: any, value: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.put(`${url}/${id}`, value, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n  public delete(url: string, id: any, request?): Observable<any> {\r\n    this.setHeaders(request);\r\n    return this.http.delete(`${url}/${id}`, { headers: this.headers, params: this.request });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AlertType } from '@shared/enum/alert';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n\r\n  @Input() type: AlertType;\r\n  @Input() msg: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"{ 'error' : type === 2, 'success' : type === 1 }\">\r\n  <label *ngIf=\"type\">{{ msg }}</label>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { Navbar } from '@shared/interface/navbar';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss']\r\n})\r\nexport class BannerComponent {\r\n\r\n  @Input() url: string;\r\n  @Input() description: string;\r\n  @Input() navbar?: Navbar[];\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"banner\" [style.background-image]=\"'url('+url+')'\">\r\n  <div *ngIf=\"description\" class=\"description container\">\r\n    <label>{{ description }}</label>\r\n  </div>\r\n\r\n  <app-navbar [items]=\"navbar\"></app-navbar>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent {\r\n\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() img: string;\r\n  @Input() link: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div>\r\n  <img [src]=\"img\">\r\n  <h2>{{ title }}</h2>\r\n  <label>{{ description }}</label>\r\n  <a href=\"link\">Conferir</a>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-label-description',\r\n  templateUrl: './label-description.component.html',\r\n  styleUrls: ['./label-description.component.scss']\r\n})\r\nexport class LabelDescriptionComponent {\r\n\r\n  @Input() label: string;\r\n  @Input() description: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<label>{{ label+':' }}</label>\r\n<label>{{ description }}</label>","import { Component, Input } from '@angular/core';\r\nimport { Navbar } from '@shared/interface/navbar';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent {\r\n\r\n  @Input() items: Navbar[];\r\n  public menuMobile = false;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"container-navbar\">\r\n  <h1>.comdeveloper</h1>\r\n  <nav>\r\n    <div (click)=\"menuMobile = true;\" class=\"hamburguer\"></div>\r\n    <div *ngIf=\"menuMobile === true\" (click)=\"menuMobile = false;\" class=\"close-hamburguer\"></div>\r\n    <ul [ngClass]=\"{'opened': menuMobile === true}\">\r\n      <li *ngFor=\"let item of items\">\r\n        <a  href=\"item.url\">{{ item.label }}</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>","export interface Contact {\r\n  name: string;\r\n  mail: string;\r\n  phone: string;\r\n  msg: string;\r\n}\r\n\r\nexport class Contact {\r\n  name: string;\r\n  mail: string;\r\n  phone: string;\r\n  msg: string;\r\n}","import { Navbar } from '@shared/interface/navbar';\r\nimport { Card } from '@shared/interface/card';\r\nimport { LabelDescription } from '@shared/interface/label-description';\r\n\r\nexport const navbar: Navbar[] = [\r\n  { label: 'Empresa', url: '' },\r\n  { label: 'Clientes', url: '' },\r\n  { label: 'Serviços', url: '' },\r\n  { label: 'Contato', url: '' },\r\n];\r\n\r\nexport const cards: Card[] = [\r\n  { title: 'Front-End', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.', img: 'assets/img/frontend.jpg', link: '' },\r\n  { title: 'Mobile', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.', img: 'assets/img/mobile.jpg', link: '' },\r\n  { title: 'Back-End', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.', img: 'assets/img/backend.jpg', link: '' },\r\n];\r\n\r\nexport const contact: LabelDescription[] = [\r\n  { label: 'Endereço', description: 'Av. Paulista, 302' },\r\n  { label: 'Site', description: 'www.developer.com.br' },\r\n  { label: 'E-mail', description: 'developer@dev.com.br' },\r\n  { label: 'Telefone', description: '(11) 2727-3030' },\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'phone'\r\n})\r\nexport class PhonePipe implements PipeTransform {\r\n\r\n  transform(value: string): any {\r\n    value = value.replace(/\\D/g, '');\r\n    value = value.replace(/^(\\d{2})(\\d)/g, '($1) $2');\r\n    value = value.replace(/(\\d)(\\d{4})$/, '$1-$2');\r\n    return value;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  contact: 'https://5dcaaa8d34d54a0014314849.mockapi.io/api/v1/users'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}